<?php
// $Id: udplanet.module,v 1.1.2.5 2010/01/20 22:46:32 mtecknology Exp $

/**
 * Implementation of hook_perm().
 */
function udplanet_perm() {
  return array('administer udplanet', 'administer own feeds', 'view udplanet');
}

/**
 * Implementation of hook_help().
 */
function udplanet_help($path, $arg) {
  switch ($path) {
    case 'admin/help#udplanet':
      $output = t('<p>The Ubuntu Drupal Sidebar allows you to add a block that will mimic the appearance of the Ubuntu sidebar.'
                . '<p>Users can use the "Planet Feeds" link under "My Account" to add their own feeds. This process is santized more than when an administrator'
                . 'modifies feeds to help ensure only their own data is modified. This is the preferred way for administrators to add their own feeds as well.</p>'
                . 'The "User Feeds" section in the settings allows the administrator to manage all planet feeds. Administrators shoule be careful when adding '
                . 'feeds through this section.</p>'
                . '<p>The "User Feeds" page allows you to manage all user feeds.<p>'
                . '<p>To add a planet feed go to the settings page and click the Add Feed drop down. Fill in the details which are described below and click Add.</p>'
                . '<p>To edit a planet feed click "edit" to the right of the feed and make the desired changes. Then click Update.</p>'
                . '<p>To delete a planet click "edit" to the right of the feed and click Delete.</p>'
                . 'Feed Options:'
                . '<ul>'
                . '<li>User - Select the user the feed will belong to.</li>'
                . '<li>Feed Title - The title that will be given to the feed. This will be displayed under the users picture. This will normally be the users name</li>'
                . '<li>Feed URL - The feed that will be aggregated to the Planet.</li>'
                . '<li>Disabled - This will not show the feed in the planet. The user can edit this setting.</li>'
                . '<li>Frozen - This will do the same things as Disabled. The difference is that the user can not edit this value.</li>'
                . '</ul>'
                . '<p>UD Planet specific settings can be set in the "Settings" page in the settings page.</p>'
                . '<li>Feed Items - The maximum number of feeds that will be displayed on the Planet page.</li>'
                . '<li>Maximum User Feeds - This is the largest number of feeds that the user will be able to have. If the user is over this limit they will not be '
                . 'able to alter any feeds until they are at or below their limit. They will not be able to add if they are at their limit but will become able to '
                . 'edit existing feeds. This is enforced for adminsitrators as well.</li>'
                . '<ul>'
                . '<li>Add Own Feeds - If this is checked, users will not be able to create new feeds.</li>'
                . '<li>Edit Own Feeds - If this is checked, users will not be able to edit existing feeds.</li>'
                . '</ul>'
                . '<p>When a user is deleted, all feeds attached to the user will be deleted. If the account becomes blocked, the feed will become frozen. An'
                . 'administrator can choose to unfreeze the feed after the user has become blocked.</p>'
                . '<p><b>NOTE:</b> This module doesn\'t reuire it; however, enabling user pictures will greatly enhance the user epxerience.'
                . '<br />You can do this at !link under the "Pictures" section.</p>', array('!link' => l(t('admin/user/settings'), 'admin/user/settings')));

      return $output;
  }
}

/**
 * Implementation of hook_menu().
 */
function udplanet_menu() {
  $items = array();

  $items['admin/settings/udplanet'] = array(
    'title' => 'UD Planet Settings',
    'description' => 'Set the various options for the UD Planet module.',
    'weight' => '0',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('udplanet_admin_settings'),
    'access arguments' => array('administer udplanet'),
    'file' => 'udplanet_settings.inc',
    'type' => MENU_NORMAL_ITEM,
  );
  $items['admin/settings/udplanet/settings'] = array(
    'title' => 'Settings',
    'description' => 'Set the various options for the Ubuntu Release Countdown module.',
    'weight' => '0',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('udplanet_admin_settings'),
    'access arguments' => array('administer udplanet'),
    'file' => 'udplanet_settings.inc',
    'type' => MENU_DEFAULT_LOCAL_TASK,
  );
  $items['admin/settings/udplanet/feeds'] = array(
    'title' => 'User Feeds',
    'description' => 'Configure feeds for all users.',
    'weight' => '1',
    'page callback' => 'udplanet_feeds_admin',
    'page arguments' => array(),
    'access arguments' => array('administer udplanet'),
    'file' => 'udplanet_feeds_admin.inc',
    'type' => MENU_LOCAL_TASK,
  );
  $items['user/%/udplanet/feeds'] = array(
    'title' => 'Planet Feeds',
    'description' => 'Configure feeds for logged in user under My Account',
    'page callback' => 'udplanet_feeds_user',
    'page arguments' => array(1),
    'access arguments' => array('administer own feeds'),
    'file' => 'udplanet_feeds_user.inc',
    'type' => MENU_LOCAL_TASK,
  );
  $items['planet'] = array(
    'title' => NULL,
    'page callback' => 'udplanet_page_content',
    'access arguments' => array('view udplanet'),
    'file' => 'udplanet_content.inc',
    'type' => MENU_CALLBACK,
  );
  $items['planet/rss'] = array(
    'title' => NULL,
    'page callback' => 'udplanet_page_rss',
    'access arguments' => array('view udplanet'),
    'file' => 'udplanet_content.inc',
    'type' => MENU_CALLBACK,
  );

  return $items;
}

/**
 * Implementation of hook_block().
 */
function udplanet_block($op = 'list', $delta = 0, $edit = array()) {
  module_load_include('inc', 'udplanet', 'udplanet_content');
  if ($op == "list") {
    $block[0]["info"] = t('Planet Sidebar');
  }
  elseif ($op == 'view') {
    $block['subject'] = 'Solar System';
    $block['content'] = udplanet_block_content();
  }
  return $block;
}

/**
 * Universal Check
 * Check for duplicate issues before adding any feeds
 */
function udplanet_check_dupes($feed_url, $feed_title, $fid) {
  $dupe = array(
    'detected' => FALSE,
    'title' => FALSE,
    'url' => FALSE,
  );

  $feeds = db_query('SELECT fid, title, url FROM {aggregator_feed}');
  while ($feed = db_fetch_object($feeds)) {
    if ($feed->fid != $fid) {
      if ($feed->title == $feed_title) {
        $dupe['detected'] = TRUE;
        $dupe['title'] = TRUE;
      }
      if ($feed->url == $feed_url) {
        $dupe['detected'] = TRUE;
        $dupe['url'] = TRUE;
      }
    }
  }

  if ($dupe['detected']) {
    form_set_error('udplanet_error', t('Duplicate entry detected.'));

    if ($dupe['title']) {
      form_set_error('udplanet_title', t('The title ' . $feed_title . ' is already being used.'));
    }
    if ($dupe['url']) {
      form_set_error('udplanet_url', t('The URL ' . $feed_url . ' is already being used.'));
    }
  }

  return $dupe['detected'];
}

/**
 * Universal Check
 * Function to limit number of added feeds
 */
function udplanet_check_limit($uid, $op) {
  $feed_limit = variable_get('udplanet_user_max', 0);

  // If this is 0 or less, they can add any number of feeds
  if ($feed_limit <= 0) {
    return TRUE;
  }

  $feed_count = db_result(db_query('SELECT COUNT(*) FROM {udplanet_feeds} WHERE uid="%s"', $uid));

  // If the user is under their limit they can add
  if ($op == 'Add') {
    if ($feed_count < $feed_limit) {
      $commit = TRUE;
    }
  }

  // If the user is not over their limit they can update
  if ($op == 'Update') {
    if ($feed_count <= $feed_limit) {
      $commit = TRUE;
    }
  }

  if ($commit) {
    return TRUE;
  }
  else {
    form_set_error('udplanet_limit', t('Failed ' . $op . ': Feed Limit! &nbsp;&nbsp;&nbsp; User has ' . $feed_count . ' feed(s). User is allowed ' . $feed_limit . ' feed(s).'));
    return FALSE;
  }
}

/**
 * Implementation of hook_menu_alter().
 * This function alters the aggregator module for because the module relies on the settings here very heavily.
 */
function udplanet_menu_alter(&$callbacks) {
  if (variable_get('udplanet_safety_enabled', TRUE)) {
    // Not catching everything | If they are this determined, they can break things in the database
    $callbacks['admin/content/aggregator']['title'] = NULL;
    $callbacks['admin/content/aggregator']['description'] = NULL;
    $callbacks['admin/content/aggregator']['page callback'] = 'udplanet_aggregator_override';
    $callbacks['admin/help/aggregator']['page callback'] = 'udplanet_aggregator_override';
    $callbacks['aggregator/sources'] = NULL;
    $callbacks['aggregator'] = NULL;
  }
}

/**
 * This function explains why they can not access the altered menus
 * This is used directly by the above function
 */
function udplanet_aggregator_override() {
  return t('<h2>Access Disabled</h2>'
         . '<p>You are not allowed to access the Aggregator module directly. The UD Planet module is enabled and is VERY tightly reliant on the Aggregator '
         . 'module and it\'s tables. Altering the Aggregator module could cause catastrophic issues for both the Planet and Aggregator modules.<p>'
         . '<p>If you need to manage the UD Planet, you should go to !link.</p>', array('!link' => l(t('admin/settings/udplanet'), 'admin/settings/udplanet')));
}

/**
 * Implementation of hook_user().
 * This function implements hooks to ensure that user alterations do not affect the feeds
 */
function udplanet_user($op, &$edit, &$account, $category = NULL) {
  switch ($op) {
    case 'delete':
      $fids = db_query('SELECT udplanet_feeds.fid AS fid FROM {udplanet_feeds} WHERE udplanet_feeds.uid = "%s"', $account->uid);
      while ($fid = db_fetch_array($fids)) {
        db_query('DELETE FROM {udplanet_feeds} WHERE uid=%d', $account->uid);
        db_query('DELETE FROM {aggregator_item} WHERE fid=%d', $fid);
        db_query('DELETE FROM {aggregator_feed} WHERE fid=%d', $fid);
      }
      break;
    case 'update':
      db_query('UPDATE {udplanet_feeds} SET frozen="%s" WHERE uid="%s"', !$edit['status'], $account->uid);
      break;
  }
}

/**
 * Implementation of hook_theme().
 */
function udplanet_theme() {
  return array(
    // Theme page content
    'page_udplanet' => array(
      'arguments' => array(
        'title' => NULL,
        'url' => NULL,
        'heading' => NULL,
        'link' => NULL,
        'content' => NULL,
        'time' => NULL,
        'picture' => NULL,
      ),
      'file' => 'udplanet_theme.inc',
    ),
    // Theme block header
    'sidebar_udplanet_header' => array(
      'arguements' => array(
        'header' => NULL,
      ),
      'file' => 'udplanet_theme.inc',
    ),
    // Theme block feeds open
    'sidebar_udplanet_feeds_open' => array(
      'arguments' => array(),
      'file' => 'udplanet_theme.inc',
    ),
    // Theme block feeds list
    'sidebar_udplanet_feeds_list' => array(
      'arguements' => array(
        'title' => NULL,
        'feed' => NULL,
        'link' => NULL,
      ),
      'file' => 'udplanet_theme.inc',
    ),
    // Theme block feeds close
    'sidebar_udplanet_feeds_close' => array(
      'arguments' => array(),
      'file' => 'udplanet_theme.inc',
    ),
  );
}

